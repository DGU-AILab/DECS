name: CI/CD - Docker Image Build and Push

# 1. 워크플로우 실행 조건: main 브랜치에 push 이벤트가 발생했을 때
on:
  push:
    branches: [ "develop" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 작업이 실행될 가상 머신 환경

    steps:
      # 2. 코드 체크아웃: GitHub 저장소의 코드를 가상 머신으로 가져옴
      - name: Checkout repository
        uses: actions/checkout@v4

      # 3. Docker Hub 로그인: 1단계에서 저장한 Secrets를 사용해 Docker Hub에 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. 이미지 태그 동적 생성: 날짜 기반으로 이미지 태그를 만듦 (예: decs:251002)
      - name: Generate image tag
        id: generate_tag
        run: echo "TAG_NAME=decs:$(date +'%y%m%d')" >> $GITHUB_OUTPUT

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .         # Dockerfile이 있는 경로 (저장소 최상위)
          push: true         # 빌드 후 Docker Hub로 푸시
          tags: |
            dguailab/decs:${{ steps.generate_tag.outputs.TAG_NAME }}
            dguailab/decs:latest
